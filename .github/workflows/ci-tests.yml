name: pytest

on:
  push:
    branches:
      - main
      - epic/*
  pull_request:
    branches:
      - main
      - epic/*

jobs:
  codecov:
    name: Unit tests + coverage
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.7]
    steps:
      - uses: actions/checkout@master
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@master
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -c .constraints/py${{ matrix.python-version }}.txt -e .[test]
          pip install .
      - name: Test with pytest-cov
        run: pytest tests -n auto --cov=qrules --cov-report=xml
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test_output_${{ matrix.os }}_${{ matrix.python-version }}
          path: tests/output
      - uses: codecov/codecov-action@v1
        with:
          file: ./coverage.xml
          # cspell:ignore unittests
          flags: unittests

  pytest:
    name: Unit tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - macos-10.15
          - ubuntu-20.04
        python-version: [3.6, 3.7, 3.8, 3.9]
        exclude:
          - os: macos-10.15
            python-version: 3.6
          - os: macos-10.15
            python-version: 3.8
          - os: macos-10.15
            python-version: 3.9
          - os: ubuntu-20.04 # coverage job
            python-version: 3.7
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -c .constraints/py${{ matrix.python-version }}.txt -e .[test]
      - name: Run unit tests and doctests with pytest
        run: pytest -n auto
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test_output_${{ matrix.os }}_${{ matrix.python-version }}
          path: tests/output

  pytest-slow:
    name: Slow tests
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-20.04
        python-version: [3.7]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -c .constraints/py${{ matrix.python-version }}.txt -e .[test]
      - name: Run slow tests
        run: pytest -n auto -m slow
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: test_output_slow
          path: tests/output
