[tox]
envlist =
    py,
    doc,
    sty,
passenv = PYTHONPATH
skip_install = True
skip_missing_interpreters = True
skipsdist = True

[testenv]
description =
    Run all unit tests
allowlist_externals =
    pytest
commands =
    pytest {posargs:tests}

[testenv:cov]
description =
    Compute test coverage
allowlist_externals =
    pytest
commands =
    pytest {posargs:tests} \
        --cov-fail-under=75 \
        --cov-report=html \
        --cov-report=xml \
        --cov=ampform

[testenv:doc]
description =
    Build documentation and API through Sphinx
changedir = docs
allowlist_externals =
    make
commands =
    make html

[testenv:doclive]
description =
    Set up a server to directly preview changes to the HTML pages
allowlist_externals =
    sphinx-autobuild
passenv =
    EXECUTE_NB
    TERM
commands =
    sphinx-autobuild \
        --watch docs \
        --watch src \
        --re-ignore .*/.ipynb_checkpoints/.* \
        --re-ignore .*/__pycache__/.* \
        --re-ignore docs/.*\.csv \
        --re-ignore docs/.*\.gv \
        --re-ignore docs/.*\.inv \
        --re-ignore docs/.*\.json \
        --re-ignore docs/.*\.pickle \
        --re-ignore docs/.*\.yaml \
        --re-ignore docs/.*\.yml \
        --re-ignore docs/_build/.* \
        --re-ignore docs/api/.* \
        --open-browser \
        docs/ docs/_build/html

[testenv:docnb]
description =
    Build documentation through Sphinx WITH output of Jupyter notebooks
setenv =
    EXECUTE_NB = "yes"
changedir = docs
allowlist_externals =
    make
commands =
    make html

[testenv:doctest]
description =
    Check the doctests in docstrings of the API
changedir = docs
allowlist_externals =
    make
commands =
    make ignore-warnings=1 doctest  # for margin directive

[testenv:linkcheck]
description =
    Check external links in the documentation (requires internet connection)
changedir = docs
allowlist_externals =
    make
commands =
    make ignore-warnings=1 linkcheck  # for margin directive

[testenv:pydeps]
description =
    Visualize module dependencies
changedir = src
setenv =
    HOME = "."
allowlist_externals = pydeps
commands =
    pydeps ampform \
        -o module_structure.svg \
        --exclude *._* \
        --max-bacon=1 \
        --noshow

[testenv:sty]
description =
    Perform all linting, formatting, and spelling checks
setenv =
    SKIP = mypy
allowlist_externals =
    bash
    mypy
    pre-commit
commands =
    mypy src tests  # run separately because of potential caching problems
    pre-commit run {posargs} -a


[coverage:run]
branch = True
source = src

[flake8]
application-import-names =
    ampform
filename =
    ./src/*.py
    ./tests/*.py
exclude =
    __pycache__
    docs/conf.py
    typings/**
ignore = # more info: https://www.flake8rules.com/
    E203 # https://github.com/psf/black#slices
    E231 # allowed by black
    E501 # https://github.com/psf/black#line-length
    RST299 # missing pygments
    RST201 # block quote ends without a blank line (black formatting)
    RST301 # unexpected indentation (related to google style docstring)
    W503 # https://github.com/psf/black#line-breaks--binary-operators
rst-roles =
    attr,
    cite,
    class,
    doc,
    download,
    file,
    func,
    meth,
    mod,
    ref,
rst-directives =
    deprecated,
    envvar,
    exception,
    glue:figure,
    glue:math,
    seealso,

[pydocstyle]
convention=google
add_ignore =
    D101, # class docstring
    D102, # method docstring
    D103, # function docstring
    D105, # magic method docstring
    D107, # init docstring
    D203, # conflicts with D211
    D213, # multi-line docstring should start at the second line
    D407, # missing dashed underline after section

[pytest]
addopts =
    --color=yes
    --durations=3
filterwarnings =
    error
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
